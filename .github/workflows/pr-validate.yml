name: pr-validate
on:
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('package.json', 'yarn.lock') }}
      - run: yarn
      - run: yarn lint
  test:
    needs: [lint]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('package.json', 'yarn.lock') }}
      - run: yarn
      - run: yarn testcoverage

      - name: Fix code coverage paths
        working-directory: .
        run: |
          sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace@g' coverage/lcov.info
          sed -i 's@'$GITHUB_WORKSPACE'@/github/workspace@g' test-report.xml

      - uses: sonarsource/sonarqube-scan-action@master
        with:
          projectBaseDir: .
          args: >
            -Dsonar.projectKey=Design-system
            -Dsonar.javascript.lcov.reportPaths=coverage/lcov.info
            -Dsonar.testExecutionReportPaths=test-report.xml
            -Dsonar.sources=src,enum,utils
            -Dsonar.tests=test
            -Dsonar.coverage.exclusions=**/enum/**

        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_DESIGN_SYSTEM }}
          SONAR_HOST_URL: ${{ secrets.SONAR_URL_DESIGN_SYSTEM }}
      # If you wish to fail your job when the Quality Gate is red, uncomment the
      # following lines. This would typically be used to fail a deployment.
      - uses: sonarsource/sonarqube-quality-gate-action@master
        timeout-minutes: 5
        env:
            SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_DESIGN_SYSTEM }}
  build:
    needs: [test]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [14.x]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
            node-version: ${{ matrix.node-version }}
      - name: Cache node_modules
        id: cache-modules
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ matrix.node-version }}-${{ runner.OS }}-build-${{ hashFiles('package.json', 'yarn.lock') }}
      - run: yarn
      - run: yarn build
